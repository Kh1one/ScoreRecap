package Login;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.lang.reflect.Field;

public class Rekap_nilai extends javax.swing.JFrame {
    private static final String username = "root";
    private static final String password = ""; //ganti pake pass mu dewe
    private static final String dataconn = "jdbc:mysql://localhost:3306/univdb";
    
    Connection SQLcon = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    int q, i, flag, deleteItem, avg;
    String nama, assignment, quiz, exam;
    String studentID;
    
    public Rekap_nilai() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_nim = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tf_nama = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        pilih_kelas = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tf_nilaiTugas = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_nilaiKuis = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_nilaiUjian = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        add_nilai = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_rekap = new javax.swing.JTable();
        btn_Exit = new javax.swing.JButton();
        update_nilai = new javax.swing.JButton();
        delete_nilai = new javax.swing.JButton();
        SearchbyStudentID = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SearchbyClass = new javax.swing.JComboBox<>();
        SearchStudentID = new javax.swing.JTextField();
        SearchLecturer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(31, 47, 152));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LECTURER MENU");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student ID");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class");

        pilih_kelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LA20", "LB20", "LC20" }));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Assignment");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quiz");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Exam");

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        add_nilai.setText("Add");
        add_nilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_nilaiActionPerformed(evt);
            }
        });

        tabel_rekap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Class", "Student ID", "Name", "Assignment", "Quiz", "Exam", "Final Score", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabel_rekap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_rekapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_rekap);

        btn_Exit.setText("Exit");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        update_nilai.setText("Update");
        update_nilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_nilaiActionPerformed(evt);
            }
        });

        delete_nilai.setText("Delete");
        delete_nilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_nilaiActionPerformed(evt);
            }
        });

        SearchbyStudentID.setBackground(new java.awt.Color(31, 47, 152));
        SearchbyStudentID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        SearchbyStudentID.setPreferredSize(new java.awt.Dimension(170, 170));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search by Student ID");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Search by Class");

        SearchbyClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "LA20", "LB20", "LC20" }));

        SearchLecturer.setText("Search");
        SearchLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchLecturerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchbyStudentIDLayout = new javax.swing.GroupLayout(SearchbyStudentID);
        SearchbyStudentID.setLayout(SearchbyStudentIDLayout);
        SearchbyStudentIDLayout.setHorizontalGroup(
            SearchbyStudentIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchbyStudentIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchbyStudentIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchbyClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchStudentID)
                    .addGroup(SearchbyStudentIDLayout.createSequentialGroup()
                        .addGroup(SearchbyStudentIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchbyStudentIDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SearchLecturer)
                .addGap(44, 44, 44))
        );
        SearchbyStudentIDLayout.setVerticalGroup(
            SearchbyStudentIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchbyStudentIDLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchbyClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchLecturer)
                .addGap(12, 12, 12))
        );

        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btn_Exit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(update_nilai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete_nilai)
                .addGap(11, 11, 11))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_nim, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pilih_kelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(clear)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_nilaiTugas)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(add_nilai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tf_nilaiKuis)
                            .addComponent(tf_nilaiUjian))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addGap(55, 55, 55)
                .addComponent(SearchbyStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_nim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(tf_nilaiTugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tf_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(tf_nilaiKuis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(pilih_kelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(tf_nilaiUjian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clear)
                            .addComponent(add_nilai)))
                    .addComponent(SearchbyStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Exit)
                    .addComponent(update_nilai)
                    .addComponent(delete_nilai)
                    .addComponent(jButton1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void UpdateDB(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            SQLcon = DriverManager.getConnection(dataconn, username, password);
            pst = SQLcon.prepareStatement(
            "SELECT * FROM Score s JOIN Student st ON s.StudentID = st.StudentID ORDER BY st.StudentID ASC"
            );
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)tabel_rekap.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                
                for(i = 1; i < q; i++){
                    columnData.add(rs.getString("ClassID"));
                    columnData.add(rs.getString("StudentID"));
                    columnData.add(rs.getString("StudentName"));
                    columnData.add(rs.getObject("Assignment"));
                    columnData.add(rs.getObject("Quiz"));
                    columnData.add(rs.getObject("Exam"));
                    columnData.add(rs.getObject("finalScore"));
                    columnData.add(rs.getString("Result"));
                }
                RecordTable.addRow(columnData);
                
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex); 
        }
    }
    
    public void UpdateHasil(){
        if(flag == 0){
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                SQLcon = DriverManager.getConnection(dataconn, username, password);
                pst = SQLcon.prepareStatement(
                "UPDATE score SET finalScore = ?, Result = ? WHERE StudentID = ?"
                );
                avg = 0;
                avg += Integer.parseInt(quiz);
                avg += Integer.parseInt(assignment);
                avg += Integer.parseInt(exam);
                avg /= 3;
                
                pst.setInt(1, avg);
                
                if(avg >= 70){
                    pst.setString(2, "PASS");
                }else{
                    pst.setString(2, "FAIL");
                }
                
                pst.setString(3, studentID);
                pst.executeUpdate();
            
            }catch(ClassNotFoundException ex){
                java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }catch(SQLException ex){
                java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }

    }
    
    
    private void add_nilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_nilaiActionPerformed
        // tombol menambahkan nilai
        try{
            flag = 0;
            Class.forName("com.mysql.cj.jdbc.Driver");
            SQLcon = DriverManager.getConnection(dataconn, username, password);
            pst = SQLcon.prepareStatement(
                        "INSERT INTO score (StudentID, ClassID, Assignment, Quiz, Exam) value(?, ?, ?, ?, ?)"
            );
            
            studentID = tf_nim.getText();
            nama = tf_nama.getText();
            
            if(studentID.isEmpty()){
                JOptionPane.showMessageDialog(this, "Please fill out required data!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                pst.setString(2, (String) pilih_kelas.getSelectedItem());
                pst.setString(1, studentID);
                
                try{
                    assignment = tf_nilaiTugas.getText();
                    pst.setInt(3, Integer.parseInt(assignment));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(3, java.sql.Types.INTEGER);
                }

                try{
                    quiz = tf_nilaiKuis.getText();
                    pst.setInt(4, Integer.parseInt(quiz));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(4, java.sql.Types.INTEGER);
                }

                try{
                    exam = tf_nilaiUjian.getText();
                    pst.setInt(5, Integer.parseInt(exam));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(5, java.sql.Types.INTEGER);
                }
            }

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data has been added");
            UpdateHasil();
            UpdateDB();
        }catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        }catch(SQLException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
               
    }//GEN-LAST:event_add_nilaiActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            SQLcon = DriverManager.getConnection(dataconn, username, password);
            pst = SQLcon.prepareStatement(
                            "SELECT * FROM Score s "
                            + "JOIN Student st ON s.StudentID = st.StudentID "
                            + "ORDER BY st.StudentID ASC"
            );
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)tabel_rekap.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                
                for(i = 1; i < q; i++){
                    columnData.add(rs.getString("ClassID"));                    
                    columnData.add(rs.getString("StudentID"));
                    columnData.add(rs.getString("StudentName"));
                    columnData.add(rs.getObject("Assignment"));
                    columnData.add(rs.getObject("Quiz"));
                    columnData.add(rs.getObject("Exam"));
                    columnData.add(rs.getObject("finalScore"));
                    columnData.add(rs.getString("Result"));
                }
                RecordTable.addRow(columnData);
            }
        
        }catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        }catch(SQLException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);


        }
    }//GEN-LAST:event_formWindowOpened

    private void update_nilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_nilaiActionPerformed
        // tombol apdet nilai
        try{
            flag = 0;
            Class.forName("com.mysql.cj.jdbc.Driver");
            SQLcon = DriverManager.getConnection(dataconn, username, password);
            pst = SQLcon.prepareStatement("UPDATE Score SET ClassID = ?, StudentID = ?, Assignment = ?, Quiz = ?, Exam = ? WHERE StudentID = ?");
            
            studentID = tf_nim.getText();
            nama = tf_nama.getText();
            
            if(studentID.isEmpty()|| nama.isEmpty()){
                JOptionPane.showMessageDialog(this, "Harap isi semua data yang diperlukan!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                pst.setString(1, (String) pilih_kelas.getSelectedItem());
                pst.setString(2, studentID);
                
                try{
                    assignment = tf_nilaiTugas.getText();
                    pst.setInt(3, Integer.parseInt(assignment));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(3, java.sql.Types.INTEGER);
                }

                try{
                    quiz = tf_nilaiKuis.getText();
                    pst.setInt(4, Integer.parseInt(quiz));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(4, java.sql.Types.INTEGER);
                }

                try{
                    exam = tf_nilaiUjian.getText();
                    pst.setInt(5, Integer.parseInt(exam));
                }catch(NumberFormatException nfe){
                    flag = 1;
                    pst.setNull(5, java.sql.Types.INTEGER);
                }
                
                pst.setString(6, studentID);

            }

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data has been updated");
            UpdateHasil();
            UpdateDB();
        }catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        }catch(SQLException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_update_nilaiActionPerformed

    private void tabel_rekapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_rekapMouseClicked
        // ini supaya data dr tabel masuk text fieldnya
        DefaultTableModel RecordTable = (DefaultTableModel)tabel_rekap.getModel();
        int selectedRows = tabel_rekap.getSelectedRow();
        
        pilih_kelas.setSelectedItem(RecordTable.getValueAt(selectedRows, 0).toString());
        tf_nim.setText(RecordTable.getValueAt(selectedRows, 1).toString());
        tf_nama.setText(RecordTable.getValueAt(selectedRows,2).toString());
        
        try{
            tf_nilaiTugas.setText(RecordTable.getValueAt(selectedRows,3).toString());
        }catch(Exception e){
            tf_nilaiTugas.setText(null);
        }

        try{
            tf_nilaiKuis.setText(RecordTable.getValueAt(selectedRows, 4).toString());
        }catch(Exception e){
            tf_nilaiKuis.setText(null);
        }

        try{
            tf_nilaiUjian.setText(RecordTable.getValueAt(selectedRows,5).toString());
        }catch(Exception e){
            tf_nilaiUjian.setText(null);
        }
        
    }//GEN-LAST:event_tabel_rekapMouseClicked

    private void delete_nilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_nilaiActionPerformed
        // delet
        try{
            deleteItem = JOptionPane.showConfirmDialog(null, "Delete?", "Warning", JOptionPane.YES_NO_OPTION);
            
            if(deleteItem == JOptionPane.YES_OPTION){
                Class.forName("com.mysql.cj.jdbc.Driver");
                SQLcon = DriverManager.getConnection(dataconn, username, password);
                pst = SQLcon.prepareStatement("delete from tabel_nilai where nim = ?");
                pst = SQLcon.prepareStatement(
                                    "delete from score where StudentID = ?"
                );               
                pst.setString(1, tf_nim.getText());
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Data has been deleted");
                
                UpdateDB();
                
                pilih_kelas.setSelectedItem("");
                tf_nim.setText("");
                tf_nama.setText("");
                tf_nilaiKuis.setText("");
                tf_nilaiTugas.setText("");
                tf_nilaiUjian.setText("");
            }

        
        }catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        }catch(SQLException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_delete_nilaiActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // biar fieldnya kosong
        pilih_kelas.setSelectedItem("");
        tf_nim.setText("");
        tf_nama.setText("");
        tf_nilaiKuis.setText("");
        tf_nilaiTugas.setText("");
        tf_nilaiUjian.setText("");
    }//GEN-LAST:event_clearActionPerformed
   
    private JFrame frame;
    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
    frame = new JFrame("Exit");        
        if(JOptionPane.showConfirmDialog(frame, "Exit?", "Score Recap", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void SearchLecturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchLecturerActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            SQLcon = DriverManager.getConnection(dataconn, username, password);
            
            
            String kelas = SearchbyClass.getSelectedItem().toString();
            String nim = SearchStudentID.getText();   
                  //gaada  nim
            if(nim.equals("")){
                if(kelas.equals("All")){
                    pst = SQLcon.prepareStatement("SELECT * FROM Score s JOIN Student st ON s.StudentID = st.StudentID");
            
                    rs = pst.executeQuery();
                    ResultSetMetaData stData = rs.getMetaData();
                    q = stData.getColumnCount();
                }else{
                    pst = SQLcon.prepareStatement("SELECT * FROM Score s JOIN Student st ON s.StudentID = st.StudentID WHERE s.ClassID = ?");

                    pst.setString(1, kelas);
                    
                    rs = pst.executeQuery();
                    ResultSetMetaData stData = rs.getMetaData();
                    q = stData.getColumnCount();
                }
            }else if(!nim.equals("")){
                //brati ada isinya
                if(kelas.equals("All")){
                    pst = SQLcon.prepareStatement("SELECT * FROM Score s JOIN Student st ON s.StudentID = st.StudentID WHERE s.StudentID = ?");
                    pst.setString(1, nim);
                    
                    rs = pst.executeQuery();
                    ResultSetMetaData stData = rs.getMetaData();
                    q = stData.getColumnCount();
                }else{
                    pst = SQLcon.prepareStatement(
                            "SELECT * FROM Score s JOIN Student st ON s.StudentID = st.StudentID WHERE s.StudentID = ? AND s.ClassID = ?");
                    pst.setString(1, nim);
                    pst.setString(2, kelas);
                    
                    rs = pst.executeQuery();
                    ResultSetMetaData stData = rs.getMetaData();
                    q = stData.getColumnCount();
                }
            }
            
            
            
            DefaultTableModel RecordTable = (DefaultTableModel)tabel_rekap.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                
                for(i = 1; i < q; i++){
                    columnData.add(rs.getString("ClassID"));                    
                    columnData.add(rs.getString("StudentID"));
                    columnData.add(rs.getString("StudentName"));
                    columnData.add(rs.getObject("Assignment"));
                    columnData.add(rs.getObject("Quiz"));
                    columnData.add(rs.getObject("Exam"));
                    columnData.add(rs.getObject("finalScore"));
                    columnData.add(rs.getString("Result"));
                }
                RecordTable.addRow(columnData);
            }
        
        }catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        }catch(SQLException ex){
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);


        }
        
    }//GEN-LAST:event_SearchLecturerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Login_App loginMenu = new Login_App();
        loginMenu.show();
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rekap_nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rekap_nilai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchLecturer;
    private javax.swing.JTextField SearchStudentID;
    private javax.swing.JComboBox<String> SearchbyClass;
    private javax.swing.JPanel SearchbyStudentID;
    private javax.swing.JButton add_nilai;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete_nilai;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> pilih_kelas;
    private javax.swing.JTable tabel_rekap;
    private javax.swing.JTextField tf_nama;
    private javax.swing.JTextField tf_nilaiKuis;
    private javax.swing.JTextField tf_nilaiTugas;
    private javax.swing.JTextField tf_nilaiUjian;
    private javax.swing.JTextField tf_nim;
    private javax.swing.JButton update_nilai;
    // End of variables declaration//GEN-END:variables
}
